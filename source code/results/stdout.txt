-------------------------------------------------------------
        Instructor: Dr. Alice Fischer, Student: Ali Al-Bayaty
        CS 620 (01) Data Structures
        Fri Dec 16 2011 02:51:28
---------------------------------------------------------------

<<< Phase1  >>>
---------------
Array size 64; length 40; contents:
aaaa bbc
aaaa bbc
d eee eee eee
fff ggg


<<< Phase2 >>>
---------------
Heap Slot:   1  2  3  4  5  6  7
Letter:      d  c  f  a  e  b  g
Frequency:   1  2  3  8  9  4  3


<<< Phase3 >>>
---------------
(1) Before Removing the left and right nodes from the heap:
Heap Slot:   1  2  3  4  5  6  7
Letter:      d  c  f  a  e  b  g
Frequency:   1  2  3  8  9  4  3

(2) After Removing the left and right nodes from the heap:
Heap Slot:   1  2  3  4  5  6  7
Letter:      g  b  f  a  e
Frequency:   3  4  3  8  9  0  0

(3) After Adding the node that contains left and right into the heap:
Heap Slot:   1  2  3  4  5  6  7
Letter:      g  b  f  a  e
Frequency:   3  4  3  8  9  3  0
---------------------------------------------------------------------

(1) Before Removing the left and right nodes from the heap:
Heap Slot:   1  2  3  4  5  6  7
Letter:      g  b  f  a  e
Frequency:   3  4  3  8  9  3  0

(2) After Removing the left and right nodes from the heap:
Heap Slot:   1  2  3  4  5  6  7
Letter:      f  b  e  a
Frequency:   3  4  9  8  0  0  0

(3) After Adding the node that contains left and right into the heap:
Heap Slot:   1  2  3  4  5  6  7
Letter:      f  b  e  a
Frequency:   3  4  9  8  6  0  0
---------------------------------------------------------------------

(1) Before Removing the left and right nodes from the heap:
Heap Slot:   1  2  3  4  5  6  7
Letter:      f  b  e  a
Frequency:   3  4  9  8  6  0  0

(2) After Removing the left and right nodes from the heap:
Heap Slot:   1  2  3  4  5  6  7
Letter:         a  e
Frequency:   6  8  9  0  0  0  0

(3) After Adding the node that contains left and right into the heap:
Heap Slot:   1  2  3  4  5  6  7
Letter:            e  a
Frequency:   6  7  9  8  0  0  0
---------------------------------------------------------------------

(1) Before Removing the left and right nodes from the heap:
Heap Slot:   1  2  3  4  5  6  7
Letter:            e  a
Frequency:   6  7  9  8  0  0  0

(2) After Removing the left and right nodes from the heap:
Heap Slot:   1  2  3  4  5  6  7
Letter:      a  e
Frequency:   8  9  0  0  0  0  0

(3) After Adding the node that contains left and right into the heap:
Heap Slot:   1  2  3  4  5  6  7
Letter:      a  e
Frequency:   8  9  13  0  0  0  0
---------------------------------------------------------------------

(1) Before Removing the left and right nodes from the heap:
Heap Slot:   1  2  3  4  5  6  7
Letter:      a  e
Frequency:   8  9  13  0  0  0  0

(2) After Removing the left and right nodes from the heap:
Heap Slot:   1  2  3  4  5  6  7
Letter:
Frequency:   13  0  0  0  0  0  0

(3) After Adding the node that contains left and right into the heap:
Heap Slot:   1  2  3  4  5  6  7
Letter:
Frequency:   13  17  0  0  0  0  0
---------------------------------------------------------------------

(1) Before Removing the left and right nodes from the heap:
Heap Slot:   1  2  3  4  5  6  7
Letter:
Frequency:   13  17  0  0  0  0  0

(2) After Removing the left and right nodes from the heap:
Heap Slot:   1  2  3  4  5  6  7
Letter:
Frequency:   0  0  0  0  0  0  0

(3) After Adding the node that contains left and right into the heap:
Heap Slot:   1  2  3  4  5  6  7
Letter:
Frequency:   30  0  0  0  0  0  0
---------------------------------------------------------------------


Infix traversal printing, tree holds:

((((g:3) :6((d:1) :3(c:2))) :13((f:3) :7(b:4))) :30((a:8) :17(e:9)))

Done printing tree


<<< Phase4 >>>
---------------
Letter  Code
------  ----
   g    000
   d    0010
   c    0011
   f    010
   b    011
   a    10
   e    11


<<< The Huffman code for each letter are written to "codes.txt" file >>>

Normal termination.

 Press 'Enter' to continue...